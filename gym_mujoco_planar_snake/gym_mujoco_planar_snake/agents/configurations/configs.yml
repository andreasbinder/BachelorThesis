# TODO
create_dataset:
  seed: 0
  variable_scope: 0
  # learning
  save_frequency: 1000 # 5000
  num_timesteps: 2000 # 1500000
  checkpoint_dir: /tmp/test_create0/
  data_dir: /tmp/test_create_result/
  # dataset creation
  subtrajector_length: 50 #50 100
  episode_length: 1000
  percentage: 0.66





extrapolation:
  seed: 0
  train_path: /home/andreas/Documents/pbirl-bachelorthesis/gym_mujoco_planar_snake/gym_mujoco_planar_snake/results/Mujoco-planar-snake-cars-angle-line-v1/initial_runs/ppo_original_1.5Mio/data_500k/train.npy
  extrapolation_path: /home/andreas/Documents/pbirl-bachelorthesis/gym_mujoco_planar_snake/gym_mujoco_planar_snake/results/Mujoco-planar-snake-cars-angle-line-v1/initial_runs/ppo_original_1.5Mio/data_500k/extrapolate.npy
  net_path: /home/andreas/Documents/pbirl-bachelorthesis/gym_mujoco_planar_snake/gym_mujoco_planar_snake/results/Mujoco-planar-snake-cars-angle-line-v1/improved_runs/vf_ensemble5_Oct__2_00:04:44/model_0

# define hyperparameters for IRL training
reward_learning:
  num_nets: 1
  input_dim: 27
  split_ratio: 0.9
  # available
  ranking_method: triplet
  hparams:
    lr: 0.00005 #0.00005
    # pair 2, 15
    epochs: 1 #10, 20 for triplet cum_reward
    ranking_approach: 5
    dataset_size: 0

ppo:
  general:
    env_id: Mujoco-planar-snake-cars-angle-line-v1
    seed: 0
    log_dir: gym_mujoco_planar_snake/results/
  initial:
    create_trajectories: true # if false you need to provide training data
    trajectory_length: 100 #50
    num_traj_per_episode: 10
    num_agents: 1 # 5
    num_timesteps: 3000 # 1000000 1500000
    sfs: 1000 #10000 5000
    save_checkpoints: true
  improved:
    validate_learned_reward: false
    num_agents: 1
    num_timesteps: 1000000 #1000000
    sfs: 100000 #100000
    save_checkpoints: true
    ctrl_coeff: 0.0 #0.0  should prevent agent from taking too high action values


